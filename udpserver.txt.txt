#include<stdio.h>

#include<sys/socket.h>

#include<netinet/in.h>

#include<string.h>

#include<stdlib.h>


int main()

 {
    
  int udpSocket,nBytes;
  
    char buffer[1024];
  
    struct sockaddr_in serverAddr,clientAddr;
    
    struct sockaddr_storage serverStorage;
  
    socklen_t addr_size,client_addr_size;
     
    int i;
      

    udpSocket=socket(AF_INET,SOCK_DGRAM,0);
   
   
 if(udpSocket==-1)
    
    {
    
          puts("socket not created\n");
 
           return 1;
    
    }
        
  
   puts("socket created\n");
   
   serverAddr.sin_family=AF_INET;
    
   serverAddr.sin_port=htons(7891);
    
   serverAddr.sin_addr.s_addr=inet_addr("127.0.0.1");
    
  
 
if(bind(udpSocket,(struct sockaddr*)&serverAddr,sizeof                                      (serverAddr))<0)
  
          {
   
             puts("Binding failed\n");
   
             return 1;
  
          }
        
    puts("Binding success\n");   
   
      
      while(1)
    
         {
    
  nBytes=recvfrom(udpSocket,buffer,1024,0,(struct                  sockaddr*)&clientAddr,&addr_size);
  
              if(nBytes<0)
 
                 {
   
                   puts("Message receiving failed\n");
  
                   return 1;
  
                }
    
         puts("Message received\n");
   
        
        for(i=0;i<nBytes;i++)
   
        buffer[i]=toupper(buffer[i]);
  
        

   if(sendto(udpSocket,buffer,nBytes,0,(struct sockaddr*)                              &clientAddr,addr_size)<0)
    
           {
    
               puts("Message sending failed\n");
   
                return 1;
   
            }
   
           puts("Message  successfully sent\n");
    
   }
       return 0;

 }